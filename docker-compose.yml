version: '3.8'

services:
  # Main API service
  api:
    build: .
    ports:
      - '8000:8000'
    environment:
      - MONGO_HOST=mongodb
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANALYZER_AGENT_URL=http://analyzer-agent:8001
      - PLANNER_AGENT_URL=http://planner-agent:8002
      - QDRANT_HOST=qdrant
      - USE_KAFKA_FOR_AGENTS=${USE_KAFKA_FOR_AGENTS:-false}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongodb
      - qdrant
      - analyzer-agent
      - planner-agent
      - kafka
      - zookeeper

  # MongoDB for tool registration and agent state
  mongodb:
    image: mongo:5.0
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo_data:/data/db

  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - '6333:6333'
    volumes:
      - qdrant_data:/qdrant/storage

  # Analyzer Agent Service
  analyzer-agent:
    build:
      context: .
      dockerfile: intelligent_chat_service/agents/Dockerfile
      args:
        AGENT_SERVICE: analyzer_service
        PORT: 8001
    ports:
      - '8001:8001'
    environment:
      - PORT=8001
      - MONGO_HOST=mongodb
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - USE_KAFKA=${USE_KAFKA_FOR_AGENTS:-false}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongodb
      - kafka

  # Planner Agent Service
  planner-agent:
    build:
      context: .
      dockerfile: intelligent_chat_service/agents/Dockerfile
      args:
        AGENT_SERVICE: planner_service
        PORT: 8002
    ports:
      - '8002:8002'
    environment:
      - PORT=8002
      - MONGO_HOST=mongodb
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - USE_KAFKA=${USE_KAFKA_FOR_AGENTS:-false}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongodb
      - kafka

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  # Kafka service
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  # Kafka UI for monitoring and managing Kafka (optional)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - '8080:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka

volumes:
  mongo_data:
  qdrant_data:
